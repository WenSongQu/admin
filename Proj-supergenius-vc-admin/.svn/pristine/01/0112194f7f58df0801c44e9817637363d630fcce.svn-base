package com.supergenius.admin.capital.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.supergenius.admin.capital.mapper.VCUserinfoDao;
import com.supergenius.admin.capital.model.VCUserDO;
import com.supergenius.admin.capital.mapper.VCUserDao;
import com.supergenius.admin.capital.model.VCUserinfoDO;
import com.supergenius.admin.capital.service.IVCUserService;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.supergenius.admin.enums.EIdentityType;
import io.swagger.models.auth.In;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * <p>
 *  服务实现类
 * </p>
 *
 * @author zuoyu
 * @since 2019-12-04
 */
@Service
public class VCUserServiceImpl extends ServiceImpl<VCUserDao, VCUserDO> implements IVCUserService {
    @Autowired
    VCUserDao vcUserDao;
    @Autowired
    VCUserinfoDao vcUserinfoDao;
    public Map<String,Integer> getUserCount(){
        Map<String,Integer> map=new HashMap<>();
        //创业人
        QueryWrapper<VCUserDO> startupWrapper=new QueryWrapper<>();
        startupWrapper.lambda().in(VCUserDO::getKind, Arrays.asList(11,12));
        int startupSize = vcUserDao.selectList(startupWrapper).size();
        map.put("startupSize",startupSize);
        //投资人
        QueryWrapper<VCUserDO> investmentWrapper=new QueryWrapper<>();
        investmentWrapper.lambda().in(VCUserDO::getKind, Arrays.asList(13,14));
        int investmentSize = vcUserDao.selectList(investmentWrapper).size();
        map.put("investmentSize",investmentSize);
        //天才保荐人
        QueryWrapper<VCUserinfoDO>  queryWrapper=new QueryWrapper<>();
        queryWrapper.lambda().in(VCUserinfoDO::getIdentity, Arrays.asList(2,3,7,15,6,10,14));
        int guarantorSize = vcUserinfoDao.selectList(queryWrapper).size();
        map.put("guarantorSize",guarantorSize);
        // 天才推荐人
        QueryWrapper<VCUserinfoDO>  queryWrapper1=new QueryWrapper<>();
        queryWrapper1.lambda().in(VCUserinfoDO::getIdentity,  Arrays.asList(4,5,15,6,14,12));
        int recommendSize = vcUserinfoDao.selectList(queryWrapper1).size();
        map.put("recommendSize",recommendSize);
        //天才召集人 convener
        QueryWrapper<VCUserinfoDO>  queryWrapper2=new QueryWrapper<>();
        queryWrapper2.lambda().in(VCUserinfoDO::getIdentity,Arrays.asList(15,8,14,12));
        int convenerSize = vcUserinfoDao.selectList(queryWrapper2).size();
        map.put("convenerSize",convenerSize);
        return  map;
    }

}
