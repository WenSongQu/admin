package com.supergenius.admin.capital.controller;


import com.baomidou.mybatisplus.extension.api.R;
import com.supergenius.admin.capital.model.VCContentDO;
import com.supergenius.admin.capital.service.IVCContentService;
import com.supergenius.admin.enums.EContentType;
import com.supergenius.admin.enums.ESide;
import com.supergenius.admin.utils.ErrorCode;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.swing.text.StyledEditorKit;
import java.util.List;

@Api(description = "轮播图")
@Slf4j
@RequestMapping("/content")
@RestController
public class ContentController {
    @Autowired
    IVCContentService contentService;

    @ApiImplicitParams({
            @ApiImplicitParam(name = "side", value = "区分创业端和投资端  ",paramType = "path", dataType = "String"),
            @ApiImplicitParam(name = "type", value = "轮播类型", paramType = "path", dataType = "String")
    })
    @GetMapping("/content/{side}/{type}")
    public R<List<VCContentDO>> getVContentDOList(@PathVariable String side,@PathVariable String type) {
        if ("venture".equals(side)) {
            if ("index".equals(type)) {
                List<VCContentDO> list = contentService.getContent(ESide.venture, EContentType.index);
                if (list == null)
                    return R.failed(new ErrorCode(401));
                return R.ok(list).setCode(200);
            }
            if ("incubator".equals(type)) {
                List<VCContentDO> list = contentService.getContent(ESide.venture, EContentType.incubator);
                if (list == null)
                    return R.failed(new ErrorCode(401));
                return R.ok(list).setCode(200);
            }
        }
            if ("capital".equals(side)) {
                if ("index".equals(type)) {
                    List<VCContentDO> list = contentService.getContent(ESide.capital, EContentType.index);
                    if (list == null)
                        return R.failed(new ErrorCode(401));
                    return R.ok(list).setCode(200);
                }
                if ("incubator".equals(type)) {
                    List<VCContentDO> list = contentService.getContent(ESide.capital, EContentType.incubator);
                    if (list == null)
                        return R.failed(new ErrorCode(401));
                    return R.ok(list).setCode(200);
                }
            }
        return R.failed(new ErrorCode(400));
    }
}
