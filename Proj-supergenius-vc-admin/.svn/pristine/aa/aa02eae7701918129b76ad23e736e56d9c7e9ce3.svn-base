package com.supergenius.admin.capital.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.supergenius.admin.capital.model.*;
import com.supergenius.admin.capital.mapper.VCOrdersDao;
import com.supergenius.admin.capital.model.vo.*;
import com.supergenius.admin.capital.service.IVCOrdersService;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * <p>
 *  服务实现类
 * </p>
 *
 * @author zuoyu
 * @since 2019-12-04
 */
@Service
public class VCOrdersServiceImpl extends ServiceImpl<VCOrdersDao, VCOrdersDO> implements IVCOrdersService {
    @Autowired
    VCOrdersDao vcOrdersDao;

    @Override
    public IPage<VCMemberOrderDisplayVO> selectMemberOrderDisplayDO(Page page,  VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectMemberOrderDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public VCOrderinfoVO selectOrderInfo(String oid) {
        return vcOrdersDao.selectOrderInfo(oid);
    }

    @Override
    public Integer invoiceed(List<String> oids) {
        Integer invoice = vcOrdersDao.invoice(oids);
        return invoice;
    }

    @Override
    public List<VCInvoicePrintVO> getVCInvoicePrintDO(List<String> list) {
        List<VCInvoicePrintVO> vcInvoicePrintDO = vcOrdersDao.getVCInvoicePrintDO(list);
        return  vcInvoicePrintDO;
    }

    @Override
    public IPage<VCGuaranteeAndRecommendDisplayVO> selectVCGuaranteeDisplayDO(Page page,  VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectVCGuaranteeDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public IPage<VCGuaranteeAndRecommendDisplayVO> selectVCrecommendDisplayDO(Page page, VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectVCrecommendDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public int returnOrder(List<String> oids) {
        return vcOrdersDao.returnOrder(oids);
    }

    @Override
    public IPage<VCMeetingOrderDisplayVO> selectVCMeetingOrderDisplayDO(Page page, VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectVCMeetingOrderDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public VCMeetingOrderInfoVO selectVCMeetingOrderInfoDO(String oid) {
        return vcOrdersDao.selectVCMeetingOrderInfoDO(oid);
    }

    @Override
    public IPage<VCTrainactivityDisplayVO> selectVCTrainactivityOrderDisplayDO(Page page, VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectVCTrainactivityOrderDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public VCTrainactivityInfoVO selecTrainactivityOrderInfo(String oid) {
        return vcOrdersDao.selecTrainactivityOrderInfo(oid);
    }

    @Override
    public IPage<VCVideoVO> selectVCVideoVOOrderDisplayDO(Page page, VCFiltrateOrderVO vcFiltrateVO) {
        return vcOrdersDao.selectVCVideoVOOrderDisplayDO(page,vcFiltrateVO);
    }

    @Override
    public VCVideoOrderInfoVO selectVideoOrderInfo(String oid) {
        return vcOrdersDao.selectVideoOrderInfo(oid);
    }

    @Override
    public List<VCOrdersDO> selectOrdersByUseruid(String uid,Integer pageNum) {
        LambdaQueryWrapper<VCOrdersDO> lambda=new LambdaQueryWrapper<>();
        pageNum=pageNum*10;
        lambda.eq(VCOrdersDO::getUseruid,uid).last("LIMIT "+pageNum.toString()+",10");
        return vcOrdersDao.selectList(lambda);
    }
}
