package com.supergenius.admin.capital.controller;

import com.alibaba.fastjson.JSON;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.api.R;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.supergenius.admin.capital.model.VCInvestmentDO;
import com.supergenius.admin.capital.model.VCOrdersDO;
import com.supergenius.admin.capital.model.VCOrganizationDO;
import com.supergenius.admin.capital.model.VCRecordDO;
import com.supergenius.admin.capital.model.vo.*;
import com.supergenius.admin.capital.service.*;
import com.supergenius.admin.utils.ErrorCode;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Slf4j
@Api(description="投资者会员")
@RequestMapping("/investorsmember")
@RestController
public class InvestorsMemberController {
    @Autowired
    IVCUserService ivcUserService;
    @Autowired
    IVCRecordService ivcRecordService;
    @Autowired
    IVCOrganizationService ivcOrganizationService;
    @Autowired
    IVCInvestmentService ivcInvestmentService;
    @Autowired
    IVCOrdersService ivcOrdersService;

    @ApiOperation("获取投资者信息列表")
    @GetMapping("/list/{pageNum}")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, paramType = "path", dataType = "int"),
            @ApiImplicitParam(name = "filtrate", value = "过滤条件", paramType = "query", dataType = "String")
    })
    public R<IPage<VCInvestorsDisplayVO>> getselectVEntrepreneurMemberDisplayDO(@RequestParam(name = "filtrate", required = false) String filtrateStr, @PathVariable int pageNum) {
        log.info(filtrateStr + "--------------");
        VCFiltrateUserVO vcFiltrateUserVO = JSON.parseObject(filtrateStr, VCFiltrateUserVO.class);
        log.info(vcFiltrateUserVO + "--------------");
        IPage<VCInvestorsDisplayVO> vcInvestorsDisplayVOIPage = ivcUserService.selectInvestorsDisplayVO(new Page(pageNum, 10), vcFiltrateUserVO);
        if (vcInvestorsDisplayVOIPage.getRecords().size() > 0) {
            return R.ok(vcInvestorsDisplayVOIPage).setCode(200);
        }
        return R.failed(new ErrorCode(401));
    }
    @ApiOperation("冻结账户和相对应的项目")
    @ApiImplicitParam(name = "userids", value = "用户uid", dataType = "String", allowMultiple = true, paramType = "query")
    @PostMapping("/freezeUser")
    @Transactional
    public R<Boolean> freezeUser(String... userids) {
        try {
            ivcUserService.freezeUser(Arrays.asList(userids));
            return R.ok(true).setCode(200);
        } catch (Exception e) {
            e.printStackTrace();
            return R.failed("failed");
        }


    }

    @ApiOperation("解冻账户")
    @ApiImplicitParam(name = "userids", value = "用户uid", dataType = "String", allowMultiple = true, paramType = "query")
    @PostMapping("/unFreezeUser")
    @Transactional
    public R<Boolean> unFreezeUser(String... userids) {
        try {
            ivcUserService.unFreezeUser(Arrays.asList(userids));
            return R.ok(true).setCode(200);
        } catch (Exception e) {
            e.printStackTrace();
            return R.failed("failed");
        }
    }
    @ApiImplicitParam(name = "useruid", value = "用户uid", dataType = "String", paramType = "path")
    @GetMapping("/getPersonInfo/{useruid}")
    public R<Map<String,Object>> getInvestorsmemberPerson(@PathVariable("useruid") String useruid){
        //获取基本信息
        VCInvestorsBasePersonInfoVO baseInfo = ivcUserService.getVCInvestorsBasePersonInfoVCById(useruid);
        if(baseInfo==null){
            return  R.failed("failed");
        }
        //投资意向
        VCInvestmentDO investmentInfo = ivcInvestmentService.getInvestmentInfo(useruid);
        //订单记录
        List<VCOrdersDO> vcOrdersDOS = ivcOrdersService.selectOrdersByUseruid(useruid);
        //投资纪录
        List<VCRecordDO> investmentRecord = ivcRecordService.getInvestmentRecord(useruid);
        //召集记录
        List<VCRecordDO> conveneRecord = ivcRecordService.getConveneRecord(useruid);
        Map<String,Object> map=new HashMap<>();
        map.put("baseInfo",baseInfo);
        map.put("investmentInfo",investmentInfo);
        map.put("orders",vcOrdersDOS);
        map.put("investmentRecord",investmentRecord);
        map.put("conveneRecord",conveneRecord);
        return  R.ok(map).setCode(200);
    }
    @ApiImplicitParam(name = "useruid", value = "用户uid", dataType = "String", paramType = "path")
    @GetMapping("/getCompanyInfo/{useruid}")
    public R<VCInvestorsmemberConpanyVO> getInvestorsmemberConpany(@PathVariable("useruid") String useruid){
        //获取基本信息
        VCInvestorsBaseConpantyInfoVO2 baseInfo = ivcUserService.getVCInvestorsBaseConpantyInfoVCById(useruid);
        if(baseInfo==null){
            return R.failed("failed");
        }
        //机构详情
        VCOrganizationDO organizationInfo = ivcOrganizationService.getOrganizationInfo(useruid);
        //投资意向
        VCInvestmentDO investmentInfo = ivcInvestmentService.getInvestmentInfo(useruid);
        //订单记录
        List<VCOrdersDO> vcOrdersDOS = ivcOrdersService.selectOrdersByUseruid(useruid);
        //投资纪录
        List<VCRecordDO> investmentRecord = ivcRecordService.getInvestmentRecord(useruid);
        //召集记录
        List<VCRecordDO> conveneRecord = ivcRecordService.getConveneRecord(useruid);
        //推荐记录
        List<VCRecordDO> ecomrmendedRecord = ivcRecordService.getEcomrmendedRecord(useruid);
        //保推记录
        List<VCRecordDO> gnvestmentRecord = ivcRecordService.getGnvestmentRecord(useruid);
        VCInvestorsmemberConpanyVO vcInvestorsmemberConpanyVO = new VCInvestorsmemberConpanyVO(
                baseInfo,organizationInfo,investmentInfo,vcOrdersDOS,investmentRecord,conveneRecord
                ,ecomrmendedRecord,gnvestmentRecord);

        return R.ok(vcInvestorsmemberConpanyVO).setCode(200);
    }







}
